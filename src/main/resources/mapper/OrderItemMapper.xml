<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.mapper.OrderItemMapper">
  <resultMap id="BaseResultMap" type="shop.bean.OrderItem">
    <id column="oiid" jdbcType="INTEGER" property="oiid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="oid" jdbcType="INTEGER" property="oid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oiid, count, money, pid, oid
  </sql>



  <!--######################          添加         ##############-->


  <sql id="WithSeconds_Base_Column_List">
    oi.oiid, oi.count, oi.pid, oi.oid,
    p.pid
  </sql>

  <resultMap id="WithSeconds_BaseResultMap" type="shop.bean.OrderItem">
    <id column="oiid" jdbcType="INTEGER" property="oiid"></id>
    <result column="count" jdbcType="INTEGER" property="count"/>
    <result column="pid" jdbcType="INTEGER" property="pid"/>
    <result column="oid" jdbcType="INTEGER" property="oid"/>
    <association property="product" javaType="shop.bean.Product" column="pid" select="shop.mapper.ProductMapper.selectByPrimaryKey">
    </association>
    <!--<collection property="products" ofType="shop.bean.Product" select="shop.mapper.ProductMapper.selectByPrimaryKey" column="pid">
    </collection>-->
  </resultMap>

  <select id="selectByExampleWithProduct" parameterType="shop.bean.OrderItemExample" resultMap="WithSeconds_BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithSeconds_Base_Column_List" />
    from orderitem oi
    left join product p on oi.pid = p.pid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKeyWithProduct" parameterType="java.lang.Integer" resultMap="WithSeconds_BaseResultMap">
    select
    <include refid="WithSeconds_Base_Column_List" />
    from orderitem oi
    left join product p on oi.pid = p.pid
    where oi.oiid = #{oiid,jdbcType=INTEGER}
  </select>



  <!--######################          添加         ##############-->



  <select id="selectByExample" parameterType="shop.bean.OrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderitem
    where oiid = #{oiid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderitem
    where oiid = #{oiid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="shop.bean.OrderItemExample">
    delete from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="shop.bean.OrderItem">
    insert into orderitem (oiid, count, money, 
      pid, oid)
    values (#{oiid,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{money,jdbcType=DOUBLE}, 
      #{pid,jdbcType=INTEGER}, #{oid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="shop.bean.OrderItem">
    insert into orderitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oiid != null">
        oiid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="oid != null">
        oid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oiid != null">
        #{oiid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="shop.bean.OrderItemExample" resultType="java.lang.Long">
    select count(*) from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderitem
    <set>
      <if test="record.oiid != null">
        oiid = #{record.oiid,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderitem
    set oiid = #{record.oiid,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE},
      pid = #{record.pid,jdbcType=INTEGER},
      oid = #{record.oid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="shop.bean.OrderItem">
    update orderitem
    <set>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=INTEGER},
      </if>
    </set>
    where oiid = #{oiid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="shop.bean.OrderItem">
    update orderitem
    set count = #{count,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE},
      pid = #{pid,jdbcType=INTEGER},
      oid = #{oid,jdbcType=INTEGER}
    where oiid = #{oiid,jdbcType=INTEGER}
  </update>
</mapper>